===============================================================================

                   J A V A  C O M M U N I T Y  P R O C E S S
       J S R  3 3 1 "C O N S T R A I N T  P R O G R A M M I N G  A P I"
                         R E L E A S E  1.1.0
                         
                  http://jcp.org/en/jsr/detail?id=331
                  http://cpstandard.wordpress.com/
                  https://groups.google.com/forum/#!forum/jsr331
                  
===============================================================================  

                            
This is the Technology Compatibility Kit (TCK) for the release 1.1.0 of the JSR-331 
"Constraint Programming API".  

HOW IT IS ORGANIZED
===================
The TCK is a regular Eclipse project (or just a folder) "org.jcp.jsr331.tck" that contains
examples of constraint satisfaction and optimization problems and all necessary tools 
that allow to execute them.

The TCK consists of the following sub-folders or Java packages:

src - sources for different test problems
-----------------------------------------
   org.jcp.jsr331.test           - mandatory JUnit tests that check compliance of 
                                   different CP solvers to the standard
   org.jcp.jsr331.samples        - various constraint satisfaction and optimization 
                                   problems that demonstrate the use of JSR-331 
   org.jcp.jsr331.linear.samples - various linear optimization problems that may be executed 
                                   with any CP or LP solvers
   org.jcp.jsr331.hakan          - a collection of test problems contributed by Hakan Kjellerstrand.

data - data for some problems from the src
------------------------------------------
   only several problems actually use the folder "data".
   
results - a folder used linear solvers for execution results and intermediate files
-----------------------------------------------------------------------------------
   not used by CP solvers.
      
   
lib - libraries with jar-files for different JSR-331 compliant solvers
----------------------------------------------------------------------
   jsr331.jar - the main JSR-331 jar file that includes all interfaces and implementations
                common for all CP solvers
   logging - logging jar-files from Apache Commons
      commons-logging-1.1.jar
      commons-logging-api-1.1.jar
      log4j-1.2.15.jar
   choco - implementation based on Choco solver
      jsr331.choco.jar   - Choco's JSR-331 interface
      choco-solver-2.1.5-20120603-with-sources.jar - Choco's own jar
   constrainer - implementation based on Constrainer
      jsr331.constrainer.jar - Constrainer's JSR-331 interface
      constrainer.light.jar  - Constrainer's own jar
   jsetl - implementation based on JSetL
      jsr331.jsetl.jar   - JSetL's JSR-331 interface
      jsetl.jar          - JSetL own jar
   linear - implementation libraries for linear solvers
      jsr331.linear.jar  - a common JSR-331 implementation for all LP solvers
      jsr331.coin.jar    - COIN https://projects.coin-or.org/Clp/
      jsr331.cplex.jar   - CPLEX http://www-01.ibm.com/software/integration/optimization/cplex-optimizer/
      jsr331.glpk.jar    - GLPK http://www.gnu.org/software/glpk/
      jsr331.gurobi.jar  - GUROBI http://www.gurobi.com/
      jsr331.lpsolve.jar - LP_SOLVE http://lpsolve.sourceforge.net/5.0/
      jsr331.scip.jar    - SCIP http://scip.zib.de/
      jsr331.ojalgo.jar  - ojAlgo http://ojalgo.org/
      ojalgo.jar         - ojAlgo's own jar.
      
      All linear solvers (except of a pure Java-based ojAlgo) are used only as external process. 
      To use these LP solvers you need to download and install the proper tools from their websites
      and make sure that you may use their executables from a command line.
      
      All provided libraries are available under the terms of the licenses included in the proper 
      folders along with jar-files.
      
bat-files
---------
   The TCK comes with several convenience bat-files that simplify execution of different 
   sample problems.
   
   run.bat - this is a based script file used by all other "run*.bat" files. 
   run*.bat - these files are used inside Windows to run different sample problems 
              from the folder "src". For example, runQueens.bat executes the problem 
              defined in org.jcp.jsr331.samples.Queens.
              Within UNIX/LINUX you need to replace *.bat files with similar *.sh files.  
   build.bat - this file is used only internally when you have all sources and want 
               to rebuild all libraries.
   

WORKING WITH ECLIPSE IDE
========================
To use the JSR-331 with Eclipse IDE, simply import the folder "jsr331" into your workspace. 
You may run all samples directly from Eclipse by selecting their sources with a right-click 
and then "Run as Java Application". To switch between underlying solvers, just select the 
Project Properties, and simply change Libraries inside Java Build Path.

WORKING WITH A FILE MANAGER
===========================
You may used the provided batch files (or write your own) if you prefer to work
without any IDE. You may run different examples by running the proper batch file, 
e.g. "runBins.bat" will execute the example "Bins" whose source code is located at
jsr331/src/org/jcp/jsr331/samples/Bins.java.

All batch files are based on the file "run.bat":

------------------
@echo off
cd %~dp0
if not "%1" == "" goto defined
set PROGRAM=org.jcp.jsr331.samples.SendMoreMoney
goto run
:defined
set PROGRAM=org.jcp.jsr331.samples.%1
:run
echo Run %PROGRAM% ...
set LIB=../org.jcp.jsr331.tck/lib
set LOGLIBS=%LIB%/logging/commons-logging-1.1.jar;%LIB%/logging/commons-logging-api-1.1.jar;%LIB%/logging/log4j-1.2.15.jar

rem set SOLVER=../org.jcp.jsr331.tck/lib/constrainer/jsr331.constrainer.jar;../org.jcp.jsr331.tck/lib/constrainer/constrainer.light.jar
set SOLVER=./lib/choco/jsr331.choco.jar;./lib/choco/choco-solver-2.1.5-20120603-with-sources.jar
rem set SOLVER=./lib/jacop/jsr331.jacop.jar;./lib/jacop/jacop-3.0.jar
rem set SOLVER=./lib/jsetl/jsr331.jsetl.jar;./lib/jsetl/jsetl.jar

set LPCOMMON=../org.jcp.jsr331.linear/lib/jsr331.linear.jar
set OPTIONS=
rem set SOLVER=../org.jcp.jsr331.linear.glpk/lib/jsr331.glpk.jar;%LPCOMMON%
rem set SOLVER=../org.jcp.jsr331.linear.cplex/lib/jsr331.cplex.jar;%LPCOMMON%
rem set SOLVER=../org.jcp.jsr331.linear.lpsolve/lib/jsr331.lpsolve.jar;%LPCOMMON%
rem set SOLVER=../org.jcp.jsr331.linear.coin/lib/jsr331.coin.jar;%LPCOMMON%
rem set SOLVER=../org.jcp.jsr331.linear.ojAlgo/lib/ojalgo.jar;%LPCOMMON%

rem set OPTIONS=-DLP_SOLVER_OPTIONS="set limits time 12000 set limits stallnodes 1000 set limits gap 1.05 set heuristics emphasis aggressive"
rem set SOLVER=../org.jcp.jsr331.linear.scip/lib/jsr331.scip.jar;%LPCOMMON%

rem set OPTIONS=-DLP_SOLVER_OPTIONS="Threads=1 Cuts=2 timelimit=15000"
rem set SOLVER=../org.jcp.jsr331.linear.gurobi/lib/jsr331.gurobi.jar;%LPCOMMON%

set LIBS=./bin;%LIB%/jsr331.jar;%SOLVER%;%LOGLIBS%
java -Xms1024m -Xmx1024m %OPTIONS% -classpath "%LIBS%" %PROGRAM% 
echo done
pause
------------------

SWITCHING BETWEEN DIFFERENT SOLVERS
===================================
If you are using a file manager, to switch between CP solvers you need to modify the file run.bat. 
For example, the above text defines SOLVER as "constrainer" as the only uncommented line that "set SOLVER". 
To switch to "choco" put "rem " in front of "set SOLVER=./lib/constrainer/..." and remove "rem " 
in front of "set SOLVER=./lib/choco/...".

If you are using Eclipse IDE, to switch between CP solvers you need to change the properties of the
project "org.jcp.jsr331.tck". From Eclipse, select this project and right-click on "Properties".
Select "Java Build Path" and then the tab "Libraries". If the currently used solver was Constrainer,
you will see two Constrainer-specific libraries that point to: 
- lib/constrainer/jsr331.constrainer.jar 
- lib/constrainer/constrainer.light.jar.

To switch to another CP solver such as "Choco", remove these two jar-files and add the proper Choco files:
- lib/choco/jsr331.choco.jar 
- lib/choco/choco-solver-2.1.5-20120603-with-sources.jar.

To switch to a linear solver, such as "Gurobi", remove jar-files for Constrainer or Choco and add the proper
Gurobi files:
- lib/linear/jsr331.linear.jar 
- lib/linear/jsr331.gurobi.jar.
Now you may execute all samples from "org.jcp.jsr331.linear.samples" by selecting the proper
Java source file and right-click on "Run as Java Application".

To switch to another LP solver, such as "GLPK", you may keep the common library
- lib/linear/jsr331.linear.jar 
but replace jsr.gurobi.jar with
- lib/linear/jsr331.glpk.jar. 


TECHNICAL SUPPORT
=================

Post requests at https://groups.google.com/forum/#!forum/jsr331 or send your comments 
and suggestions to jacobfeldman@openrules.com.

