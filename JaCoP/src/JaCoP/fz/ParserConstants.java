/* Generated By:JJTree&JavaCC: Do not edit this line. ParserConstants.java */
package JaCoP.fz;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 6;
  /** RegularExpression Id. */
  int STRING_LITERAL = 7;
  /** RegularExpression Id. */
  int INT_LITERAL = 8;
  /** RegularExpression Id. */
  int FLOAT_LITERAL = 9;
  /** RegularExpression Id. */
  int SC = 10;
  /** RegularExpression Id. */
  int COLON = 11;
  /** RegularExpression Id. */
  int COMMA = 12;
  /** RegularExpression Id. */
  int LP = 13;
  /** RegularExpression Id. */
  int RP = 14;
  /** RegularExpression Id. */
  int LBOX = 15;
  /** RegularExpression Id. */
  int RBOX = 16;
  /** RegularExpression Id. */
  int LB = 17;
  /** RegularExpression Id. */
  int RB = 18;
  /** RegularExpression Id. */
  int ASGN = 19;
  /** RegularExpression Id. */
  int ARRAY = 20;
  /** RegularExpression Id. */
  int BOOL = 21;
  /** RegularExpression Id. */
  int CONSTRAINT = 22;
  /** RegularExpression Id. */
  int FALSE = 23;
  /** RegularExpression Id. */
  int FLOAT = 24;
  /** RegularExpression Id. */
  int INT = 25;
  /** RegularExpression Id. */
  int MINIMIZE = 26;
  /** RegularExpression Id. */
  int MAXIMIZE = 27;
  /** RegularExpression Id. */
  int OF = 28;
  /** RegularExpression Id. */
  int OUTPUT = 29;
  /** RegularExpression Id. */
  int PREDICATE = 30;
  /** RegularExpression Id. */
  int SATISFY = 31;
  /** RegularExpression Id. */
  int SET = 32;
  /** RegularExpression Id. */
  int SHOW = 33;
  /** RegularExpression Id. */
  int SHOW_COND = 34;
  /** RegularExpression Id. */
  int SOLVE = 35;
  /** RegularExpression Id. */
  int TRUE = 36;
  /** RegularExpression Id. */
  int VAR = 37;
  /** RegularExpression Id. */
  int DOTDOT = 38;
  /** RegularExpression Id. */
  int COLONCOLON = 39;
  /** RegularExpression Id. */
  int IDENT = 40;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<SINGLE_LINE_COMMENT>",
    "<STRING_LITERAL>",
    "<INT_LITERAL>",
    "<FLOAT_LITERAL>",
    "\";\"",
    "\":\"",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"=\"",
    "\"array\"",
    "\"bool\"",
    "\"constraint\"",
    "\"false\"",
    "\"float\"",
    "\"int\"",
    "\"minimize\"",
    "\"maximize\"",
    "\"of\"",
    "\"output\"",
    "\"predicate\"",
    "\"satisfy\"",
    "\"set\"",
    "\"show\"",
    "\"show_cond\"",
    "\"solve\"",
    "\"true\"",
    "\"var\"",
    "\"..\"",
    "\"::\"",
    "<IDENT>",
  };

}
