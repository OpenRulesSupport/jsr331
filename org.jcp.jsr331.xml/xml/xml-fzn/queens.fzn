array [1..4] of var 1..4: q :: output_array([1..4]);
constraint int_lin_ne([1, -1], [q[1], q[2]], -1);
constraint int_lin_ne([1, -1], [q[1], q[2]], 1);
constraint int_lin_ne([1, -1], [q[1], q[3]], -2);
constraint int_lin_ne([1, -1], [q[1], q[3]], 2);
constraint int_lin_ne([1, -1], [q[1], q[4]], -3);
constraint int_lin_ne([1, -1], [q[1], q[4]], 3);
constraint int_lin_ne([1, -1], [q[2], q[3]], -1);
constraint int_lin_ne([1, -1], [q[2], q[3]], 1);
constraint int_lin_ne([1, -1], [q[2], q[4]], -2);
constraint int_lin_ne([1, -1], [q[2], q[4]], 2);
constraint int_lin_ne([1, -1], [q[3], q[4]], -1);
constraint int_lin_ne([1, -1], [q[3], q[4]], 1);
constraint int_ne(q[1], q[2]);
constraint int_ne(q[1], q[3]);
constraint int_ne(q[1], q[4]);
constraint int_ne(q[2], q[3]);
constraint int_ne(q[2], q[4]);
constraint int_ne(q[3], q[4]);
solve :: int_search(q, first_fail, indomain_min, complete) satisfy;
